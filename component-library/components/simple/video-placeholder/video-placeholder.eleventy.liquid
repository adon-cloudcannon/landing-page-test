{% assign css_styles = "" %}

{% if styles.margin %}
	{% if styles.margin.top %}
		{% assign css_styles = css_styles | append: " " | append: "margin-top:" | append: styles.margin.top | append: "px;" %}
	{% endif %}

	{% if styles.margin.left %}
		{% assign css_styles = css_styles | append: " " | append: "margin-left:" | append: styles.margin.left | append: "px;" %}
	{% endif %}

	{% if styles.margin.right %}
		{% assign css_styles = css_styles | append: " " | append: "margin-right:" | append: styles.margin.right | append: "px;" %}
	{% endif %}

	{% if styles.margin.bottom %}
		{% assign css_styles = css_styles | append: " " | append: "margin-bottom:" | append: styles.margin.bottom | append: "px;" %}
	{% endif %}
{% endif %}

<div class="relative z-10" style="{{ css_styles }}">
	<div
		x-init=""
		x-data="
			{ 
				'showModal': false,
				'renderIframe': false,
				async hide() { 
					this.showModal = false; 
					let p = await this.player();
					p.pause(); 
				}, 
				show() {
					var t = this;
					this.loadScript('https://player.vimeo.com/api/player.js', async function() {
						t.showModal = true;
						t.renderIframe = true;
						let p = await t.player();
						p.play(); 
					});
				},
				async player() {
					let keepTrying, 
							attempts = 50;
					do {
							try {
								var v = new Vimeo.Player($refs.video);
								return v;
							} catch(err) {
									keepTrying = true;
									attempts--;
									await this.sleep(100);
							}
					} while (keepTrying && attempts > 0);
				},

				sleep(ms) {
					return new Promise(resolve => setTimeout(resolve, ms));
				},

				loadScript(url, fn) {
					let script;
					const scripts = Array.from(document.querySelectorAll('script'));
					const existingScript = scripts.find((script) => script.src === url);
					if (!existingScript) {
						script = document.createElement('script');
						script.type = 'text/javascript';
						script.src = url;
						script.onload = fn;
						document.getElementsByTagName('head')[0].appendChild(script);
						
					} else {
						fn();
					}
				}
			}"
		@keydown.escape="showModal = false">

		<a @click="show()" class="w-20 absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 inline-block">
			<div class="rounded-full bg-yellow-300 text-center border-black border-2 p-6 hover:scale-110 transition">
				{{ '/src/images/icons/outline/play.svg' | svgContents }}
			</div>
		</a>
		<img src="{{ content.placeholder_image }}" alt="{{ content.title }}">

		{% bookshop "helpers/video-modal" video:content.video, title:content.title %}
	</div>
</div>